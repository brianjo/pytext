WordTaggingOutputLayer.Config
=============================



**Component:** :class:`WordTaggingOutputLayer  <pytext.models.output_layers.word_tagging_output_layer.WordTaggingOutputLayer>`\ 


.. py:currentmodule:: pytext.models.output_layers.word_tagging_output_layer
.. py:class:: WordTaggingOutputLayer.Config
  :noindex:

  **Bases:** :class:`OutputLayerBase.Config <pytext.models.output_layers.output_layer_base.OutputLayerBase.Config>`\ 

  

**All Attributes (including base classes)**

  **load_path**: Optional[str] = ``None``
    \ 

  **save_path**: Optional[str] = ``None``
    \ 

  **freeze**: bool = ``False``
    \ 

  **shared_module_key**: Optional[str] = ``None``
    \ 

  **loss**: Union[:doc:`CrossEntropyLoss.Config <pytext.loss.loss.CrossEntropyLoss.Config>`, :doc:`BinaryCrossEntropyLoss.Config <pytext.loss.loss.BinaryCrossEntropyLoss.Config>`, :doc:`AUCPRHingeLoss.Config <pytext.loss.loss.AUCPRHingeLoss.Config>`, :doc:`KLDivergenceBCELoss.Config <pytext.loss.loss.KLDivergenceBCELoss.Config>`, :doc:`KLDivergenceCELoss.Config <pytext.loss.loss.KLDivergenceCELoss.Config>`, :doc:`LabelSmoothedCrossEntropyLoss.Config <pytext.loss.loss.LabelSmoothedCrossEntropyLoss.Config>`] = :doc:`CrossEntropyLoss.Config <pytext.loss.loss.CrossEntropyLoss.Config>`\ ()
    \ 

  **label_weights**: dict[str, float] = ``{}``
    \ 

  **ignore_pad_in_loss**: Optional[bool] = ``True``
    \ 



**Default JSON**


.. code-block:: json


  {
      "load_path": null,
      "save_path": null,
      "freeze": false,
      "shared_module_key": null,
      "loss": {
          "CrossEntropyLoss": {}
      },
      "label_weights": {},
      "ignore_pad_in_loss": true
  }
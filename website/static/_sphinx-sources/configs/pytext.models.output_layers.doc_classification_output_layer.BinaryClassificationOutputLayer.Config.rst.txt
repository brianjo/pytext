BinaryClassificationOutputLayer.Config
======================================



**Component:** :class:`BinaryClassificationOutputLayer  <pytext.models.output_layers.doc_classification_output_layer.BinaryClassificationOutputLayer>`\ 


.. py:currentmodule:: pytext.config.component
.. py:class:: BinaryClassificationOutputLayer.Config
  :noindex:

  **Bases:** :class:`ClassificationOutputLayer.Config <pytext.models.output_layers.doc_classification_output_layer.ClassificationOutputLayer.Config>`\ 

  

**All Attributes (including base classes)**

  **load_path**: Optional[str] = ``None``
    \ 

  **save_path**: Optional[str] = ``None``
    \ 

  **freeze**: bool = ``False``
    \ 

  **shared_module_key**: Optional[str] = ``None``
    \ 

  **loss**: Union[:doc:`CrossEntropyLoss.Config <pytext.loss.loss.CrossEntropyLoss.Config>`, :doc:`BinaryCrossEntropyLoss.Config <pytext.loss.loss.BinaryCrossEntropyLoss.Config>`, :doc:`MultiLabelSoftMarginLoss.Config <pytext.loss.loss.MultiLabelSoftMarginLoss.Config>`, :doc:`AUCPRHingeLoss.Config <pytext.loss.loss.AUCPRHingeLoss.Config>`, :doc:`KLDivergenceBCELoss.Config <pytext.loss.loss.KLDivergenceBCELoss.Config>`, :doc:`KLDivergenceCELoss.Config <pytext.loss.loss.KLDivergenceCELoss.Config>`, :doc:`LabelSmoothedCrossEntropyLoss.Config <pytext.loss.loss.LabelSmoothedCrossEntropyLoss.Config>`] = :doc:`CrossEntropyLoss.Config <pytext.loss.loss.CrossEntropyLoss.Config>`\ ()
    \ 

  **label_weights**: Optional[dict[str, float]] = ``None``
    \ 



**Default JSON**


.. code-block:: json


  {
      "load_path": null,
      "save_path": null,
      "freeze": false,
      "shared_module_key": null,
      "loss": {
          "CrossEntropyLoss": {}
      },
      "label_weights": null
  }
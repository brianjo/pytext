RoBERTaNERTask.Config
=====================



**Component:** :class:`RoBERTaNERTask  <pytext.task.tasks.RoBERTaNERTask>`\ 


.. py:currentmodule:: pytext.task.tasks
.. py:class:: RoBERTaNERTask.Config
  :noindex:

  **Bases:** :class:`NewTask.Config <pytext.task.new_task.NewTask.Config>`\ 

  

**All Attributes (including base classes)**

  **data**: :doc:`Data.Config <pytext.data.data.Data.Config>` = :doc:`Data.Config <pytext.data.data.Data.Config>`\ ()
    \ 

  **trainer**: :doc:`TaskTrainer.Config <pytext.trainers.trainer.TaskTrainer.Config>` = :doc:`TaskTrainer.Config <pytext.trainers.trainer.TaskTrainer.Config>`\ ()
    \ 

  **model**: :doc:`RoBERTaWordTaggingModel.Config <pytext.models.roberta.RoBERTaWordTaggingModel.Config>` = :doc:`RoBERTaWordTaggingModel.Config <pytext.models.roberta.RoBERTaWordTaggingModel.Config>`\ ()
    \ 

  **metric_reporter**: :doc:`NERMetricReporter.Config <pytext.metric_reporters.word_tagging_metric_reporter.NERMetricReporter.Config>` = :doc:`NERMetricReporter.Config <pytext.metric_reporters.word_tagging_metric_reporter.NERMetricReporter.Config>`\ ()
    \ 



**Default JSON**


.. code-block:: json


  {
      "data": {
          "Data": {
              "source": {
                  "TSVDataSource": {
                      "column_mapping": {},
                      "train_filename": null,
                      "test_filename": null,
                      "eval_filename": null,
                      "field_names": null,
                      "delimiter": "\t",
                      "quoted": false,
                      "drop_incomplete_rows": false
                  }
              },
              "batcher": {
                  "PoolingBatcher": {
                      "train_batch_size": 16,
                      "eval_batch_size": 16,
                      "test_batch_size": 16,
                      "pool_num_batches": 10000,
                      "num_shuffled_pools": 1
                  }
              },
              "sort_key": null,
              "in_memory": true
          }
      },
      "trainer": {
          "TaskTrainer": {
              "epochs": 10,
              "early_stop_after": 0,
              "max_clip_norm": null,
              "report_train_metrics": true,
              "target_time_limit_seconds": null,
              "do_eval": true,
              "load_best_model_after_train": true,
              "num_samples_to_log_progress": 1000,
              "num_accumulated_batches": 1,
              "num_batches_per_epoch": null,
              "optimizer": {
                  "Adam": {
                      "lr": 0.001,
                      "weight_decay": 1e-05,
                      "eps": 1e-08
                  }
              },
              "scheduler": null,
              "sparsifier": null,
              "fp16_args": {
                  "FP16OptimizerFairseq": {
                      "init_loss_scale": 128,
                      "scale_window": null,
                      "scale_tolerance": 0.0,
                      "threshold_loss_scale": null,
                      "min_loss_scale": 0.0001
                  }
              }
          }
      },
      "model": {
          "inputs": {
              "tokens": {
                  "is_input": true,
                  "columns": [
                      "text"
                  ],
                  "tokenizer": {
                      "GPT2BPETokenizer": {
                          "bpe_encoder_path": "manifold://pytext_training/tree/static/vocabs/bpe/gpt2/encoder.json",
                          "bpe_vocab_path": "manifold://pytext_training/tree/static/vocabs/bpe/gpt2/vocab.bpe"
                      }
                  },
                  "base_tokenizer": null,
                  "vocab_file": "manifold://pytext_training/tree/static/vocabs/bpe/gpt2/dict.txt",
                  "max_seq_len": 256,
                  "labels_columns": [
                      "label"
                  ],
                  "labels": []
              }
          },
          "encoder": {
              "RoBERTaEncoderJit": {
                  "load_path": null,
                  "save_path": null,
                  "freeze": false,
                  "shared_module_key": null,
                  "output_dropout": 0.4,
                  "embedding_dim": 768,
                  "pooling": "cls_token",
                  "export": false,
                  "pretrained_encoder": {
                      "load_path": "manifold://pytext_training/tree/static/models/roberta_public.pt1",
                      "save_path": null,
                      "freeze": false,
                      "shared_module_key": null
                  }
              }
          },
          "decoder": {
              "load_path": null,
              "save_path": null,
              "freeze": false,
              "shared_module_key": null,
              "hidden_dims": [],
              "out_dim": null,
              "layer_norm": false,
              "dropout": 0.0,
              "activation": "relu"
          },
          "output_layer": {
              "load_path": null,
              "save_path": null,
              "freeze": false,
              "shared_module_key": null,
              "loss": {
                  "CrossEntropyLoss": {}
              },
              "label_weights": {},
              "ignore_pad_in_loss": true
          }
      },
      "metric_reporter": {
          "output_path": "/tmp/test_out.txt",
          "pep_format": false
      }
  }
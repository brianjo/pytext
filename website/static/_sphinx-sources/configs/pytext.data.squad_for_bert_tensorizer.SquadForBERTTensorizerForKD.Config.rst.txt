SquadForBERTTensorizerForKD.Config
==================================



**Component:** :class:`SquadForBERTTensorizerForKD  <pytext.data.squad_for_bert_tensorizer.SquadForBERTTensorizerForKD>`\ 


.. py:currentmodule:: pytext.data.squad_for_bert_tensorizer
.. py:class:: SquadForBERTTensorizerForKD.Config
  :noindex:

  **Bases:** :class:`SquadForBERTTensorizer.Config <pytext.data.squad_for_bert_tensorizer.SquadForBERTTensorizer.Config>`\ 

  

**All Attributes (including base classes)**

  **is_input**: bool = ``True``
    \ 

  **columns**: list[str] = ``['question', 'doc']``
    \ 

  **tokenizer**: :doc:`Tokenizer.Config <pytext.data.tokenizers.tokenizer.Tokenizer.Config>` = :doc:`WordPieceTokenizer.Config <pytext.data.tokenizers.tokenizer.WordPieceTokenizer.Config>`\ ()
    \ 

  **base_tokenizer**: Optional[:doc:`Tokenizer.Config <pytext.data.tokenizers.tokenizer.Tokenizer.Config>`] = ``None``
    \ 

  **vocab_file**: str = ``'/mnt/vol/nlp_technologies/bert/uncased_L-12_H-768_A-12/vocab.txt'``
    \ 

  **max_seq_len**: int = ``256``
    \ 

  **answers_column**: str = ``'answers'``
    \ 

  **answer_starts_column**: str = ``'answer_starts'``
    \ 

  **start_logits_column**: str = ``'start_logits'``
    \ 

  **end_logits_column**: str = ``'end_logits'``
    \ 

  **has_answer_logits_column**: str = ``'has_answer_logits'``
    \ 

  **pad_mask_column**: str = ``'pad_mask'``
    \ 

  **segment_labels_column**: str = ``'segment_labels'``
    \ 



**Default JSON**


.. code-block:: json


  {
      "is_input": true,
      "columns": [
          "question",
          "doc"
      ],
      "tokenizer": {
          "WordPieceTokenizer": {
              "basic_tokenizer": {
                  "split_regex": "\\s+",
                  "lowercase": true
              },
              "wordpiece_vocab_path": "/mnt/vol/nlp_technologies/bert/uncased_L-12_H-768_A-12/vocab.txt"
          }
      },
      "base_tokenizer": null,
      "vocab_file": "/mnt/vol/nlp_technologies/bert/uncased_L-12_H-768_A-12/vocab.txt",
      "max_seq_len": 256,
      "answers_column": "answers",
      "answer_starts_column": "answer_starts",
      "start_logits_column": "start_logits",
      "end_logits_column": "end_logits",
      "has_answer_logits_column": "has_answer_logits",
      "pad_mask_column": "pad_mask",
      "segment_labels_column": "segment_labels"
  }
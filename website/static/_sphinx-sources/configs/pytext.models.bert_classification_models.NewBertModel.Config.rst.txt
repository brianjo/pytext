NewBertModel.Config
===================



**Component:** :class:`NewBertModel  <pytext.models.bert_classification_models.NewBertModel>`\ 


.. py:currentmodule:: pytext.models.bert_classification_models
.. py:class:: NewBertModel.Config
  :noindex:

  **Bases:** :class:`BaseModel.Config <pytext.models.model.BaseModel.Config>`\ 

  

**All Attributes (including base classes)**

  **inputs**: :doc:`BertModelInput <pytext.models.bert_classification_models.BertModelInput>` = :doc:`BertModelInput <pytext.models.bert_classification_models.BertModelInput>`\ ()
    \ 

  **encoder**: :doc:`TransformerSentenceEncoderBase.Config <pytext.models.representations.transformer_sentence_encoder_base.TransformerSentenceEncoderBase.Config>` = :doc:`HuggingFaceBertSentenceEncoder.Config <pytext.models.representations.huggingface_bert_sentence_encoder.HuggingFaceBertSentenceEncoder.Config>`\ ()
    \ 

  **decoder**: :doc:`MLPDecoder.Config <pytext.models.decoders.mlp_decoder.MLPDecoder.Config>` = :doc:`MLPDecoder.Config <pytext.models.decoders.mlp_decoder.MLPDecoder.Config>`\ ()
    \ 

  **output_layer**: :doc:`ClassificationOutputLayer.Config <pytext.models.output_layers.doc_classification_output_layer.ClassificationOutputLayer.Config>` = :doc:`ClassificationOutputLayer.Config <pytext.models.output_layers.doc_classification_output_layer.ClassificationOutputLayer.Config>`\ ()
    \ 



**Subclasses**
  - :class:`NewBertRegressionModel.Config <pytext.models.bert_regression_model.NewBertRegressionModel.Config>`\ 
  - :class:`BertSquadQAModel.Config <pytext.models.qna.bert_squad_qa.BertSquadQAModel.Config>`\ 
  - :class:`RoBERTa.Config <pytext.models.roberta.RoBERTa.Config>`\ 


**Default JSON**


.. code-block:: json


  {
      "inputs": {
          "tokens": {
              "BERTTensorizer": {
                  "is_input": true,
                  "columns": [
                      "text"
                  ],
                  "tokenizer": {
                      "WordPieceTokenizer": {
                          "basic_tokenizer": {
                              "split_regex": "\\s+",
                              "lowercase": true
                          },
                          "wordpiece_vocab_path": "/mnt/vol/nlp_technologies/bert/uncased_L-12_H-768_A-12/vocab.txt"
                      }
                  },
                  "base_tokenizer": null,
                  "vocab_file": "/mnt/vol/nlp_technologies/bert/uncased_L-12_H-768_A-12/vocab.txt",
                  "max_seq_len": 128
              }
          },
          "dense": null,
          "labels": {
              "LabelTensorizer": {
                  "is_input": false,
                  "column": "label",
                  "allow_unknown": false,
                  "pad_in_vocab": false,
                  "label_vocab": null
              }
          },
          "num_tokens": {
              "is_input": false,
              "names": [
                  "tokens"
              ],
              "indexes": [
                  2
              ]
          }
      },
      "encoder": {
          "HuggingFaceBertSentenceEncoder": {
              "load_path": null,
              "save_path": null,
              "freeze": false,
              "shared_module_key": null,
              "output_dropout": 0.4,
              "embedding_dim": 768,
              "pooling": "cls_token",
              "export": false,
              "bert_cpt_dir": "/mnt/vol/nlp_technologies/bert/uncased_L-12_H-768_A-12/",
              "load_weights": true
          }
      },
      "decoder": {
          "load_path": null,
          "save_path": null,
          "freeze": false,
          "shared_module_key": null,
          "hidden_dims": [],
          "out_dim": null,
          "layer_norm": false,
          "dropout": 0.0,
          "activation": "relu"
      },
      "output_layer": {
          "load_path": null,
          "save_path": null,
          "freeze": false,
          "shared_module_key": null,
          "loss": {
              "CrossEntropyLoss": {}
          },
          "label_weights": null
      }
  }
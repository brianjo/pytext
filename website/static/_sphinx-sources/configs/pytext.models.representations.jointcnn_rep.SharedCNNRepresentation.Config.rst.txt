SharedCNNRepresentation.Config
==============================



**Component:** :class:`SharedCNNRepresentation  <pytext.models.representations.jointcnn_rep.SharedCNNRepresentation>`\ 


.. py:currentmodule:: pytext.models.representations.jointcnn_rep
.. py:class:: SharedCNNRepresentation.Config
  :noindex:

  **Bases:** :class:`RepresentationBase.Config <pytext.models.representations.representation_base.RepresentationBase.Config>`\ 

  

**All Attributes (including base classes)**

  **load_path**: Optional[str] = ``None``
    \ 

  **save_path**: Optional[str] = ``None``
    \ 

  **freeze**: bool = ``False``
    \ 

  **shared_module_key**: Optional[str] = ``None``
    \ 

  **word_representation**: Union[:doc:`BSeqCNNRepresentation.Config <pytext.models.representations.biseqcnn.BSeqCNNRepresentation.Config>`, :doc:`DeepCNNRepresentation.Config <pytext.models.representations.deepcnn.DeepCNNRepresentation.Config>`] = :doc:`DeepCNNRepresentation.Config <pytext.models.representations.deepcnn.DeepCNNRepresentation.Config>`\ ()
    \ 

  **pooling_type**: PoolingType = ``<PoolingType.MAX: 'max'>``
    \ 



**Default JSON**


.. code-block:: json


  {
      "load_path": null,
      "save_path": null,
      "freeze": false,
      "shared_module_key": null,
      "word_representation": {
          "DeepCNNRepresentation": {
              "load_path": null,
              "save_path": null,
              "freeze": false,
              "shared_module_key": null,
              "cnn": {
                  "kernel_num": 100,
                  "kernel_sizes": [
                      3,
                      4
                  ],
                  "weight_norm": false,
                  "dilated": false,
                  "causal": false
              },
              "dropout": 0.3,
              "activation": "glu",
              "separable": false,
              "bottleneck": 0,
              "pooling_type": "none"
          }
      },
      "pooling_type": "max"
  }